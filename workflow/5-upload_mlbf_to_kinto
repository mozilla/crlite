#!/bin/bash

ensureExists() {
  file="${1}"
  if [ ! -r "${file}" ] ; then
    echo "MLBF not found at ${file}"
    exit 1
  fi
  ls -la "${file}"
}

if [ "$KINTO_AUTH_USER" == "" ] ; then
  echo "You'll need to export or set KINTO_AUTH_USER and KINTO_AUTH_PASSWORD before calling this."
  echo "Example: "
  echo "   KINTO_AUTH_PASSWORD=password KINTO_AUTH_USER=username $0"
  exit 1
fi

if [ $# -lt 1 ] ; then
   echo "Usage: $0 /ct/processing/{IDENTIFIER}"
   exit 1
fi

if [ ! -d ${1} ] ; then
  echo "${1} is not a path."
  exit 1
fi

identifier="$(basename ${1})"

currentMLBF="${crlite_processing:-/ct/processing}/${identifier}/mlbf/filter"
ensureExists "${currentMLBF}"

stashMLBF="${crlite_processing:-/ct/processing}/${identifier}/mlbf/filter.stash"
ensureExists "${stashMLBF}"

filterSize=$(stat --printf="%s" "${currentMLBF}")
stashSize=$(stat --printf="%s" "${stashMLBF}")

filterEpochTime=$(stat --printf="%W" "${crlite_processing:-/ct/processing}/${identifier}")
filterIsoTime=$(date --utc --iso-8601=seconds --date="@${filterEpochTime}")

echo "Filter size: ${filterSize}"
echo "Stash size: ${stashSize}"
echo "Filter timestamp: ${filterIsoTime}"

echo "Auth token: (var is KINTO_AUTH_TOKEN, not shown)"
echo "Proxy: $HTTPS_PROXY"
echo "Remember, you needed to SSH into here with 'ssh -R 32547 <hostname>' to set up the reverse proxy. "
echo "Also note:"
echo "  1) This is a cheating way to get around firewall restrictions, bouncing to your home box."
echo "  2) You'll need to have the VPN connected."
echo "  3) You'll need OpenSSH 6.7 or later."

python3 ${crlite_bin:-~/crlite}/moz_kinto_publisher/main.py --crlite --stash "${stashMLBF}" --filter "${currentMLBF}" --timestamp "${filterIsoTime}"
